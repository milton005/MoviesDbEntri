// Generated by Dagger (https://dagger.dev).
package com.example.moviedb_entri.di.Modules;

import com.example.moviedb_entri.data.DispatcherProvider;
import dagger.internal.Factory;
import dagger.internal.Preconditions;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class DispatcherProviderModule_ProvideCoroutinesDispatcherProviderFactory implements Factory<DispatcherProvider> {
  private final DispatcherProviderModule module;

  public DispatcherProviderModule_ProvideCoroutinesDispatcherProviderFactory(
      DispatcherProviderModule module) {
    this.module = module;
  }

  @Override
  public DispatcherProvider get() {
    return provideCoroutinesDispatcherProvider(module);
  }

  public static DispatcherProviderModule_ProvideCoroutinesDispatcherProviderFactory create(
      DispatcherProviderModule module) {
    return new DispatcherProviderModule_ProvideCoroutinesDispatcherProviderFactory(module);
  }

  public static DispatcherProvider provideCoroutinesDispatcherProvider(
      DispatcherProviderModule instance) {
    return Preconditions.checkNotNull(instance.provideCoroutinesDispatcherProvider(), "Cannot return null from a non-@Nullable @Provides method");
  }
}
