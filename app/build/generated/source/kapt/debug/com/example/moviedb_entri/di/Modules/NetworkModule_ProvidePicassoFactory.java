// Generated by Dagger (https://dagger.dev).
package com.example.moviedb_entri.di.Modules;

import android.content.Context;
import com.squareup.picasso.OkHttp3Downloader;
import com.squareup.picasso.Picasso;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class NetworkModule_ProvidePicassoFactory implements Factory<Picasso> {
  private final NetworkModule module;

  private final Provider<Context> contextProvider;

  private final Provider<OkHttp3Downloader> okHttp3DownloaderProvider;

  public NetworkModule_ProvidePicassoFactory(NetworkModule module,
      Provider<Context> contextProvider, Provider<OkHttp3Downloader> okHttp3DownloaderProvider) {
    this.module = module;
    this.contextProvider = contextProvider;
    this.okHttp3DownloaderProvider = okHttp3DownloaderProvider;
  }

  @Override
  public Picasso get() {
    return providePicasso(module, contextProvider.get(), okHttp3DownloaderProvider.get());
  }

  public static NetworkModule_ProvidePicassoFactory create(NetworkModule module,
      Provider<Context> contextProvider, Provider<OkHttp3Downloader> okHttp3DownloaderProvider) {
    return new NetworkModule_ProvidePicassoFactory(module, contextProvider, okHttp3DownloaderProvider);
  }

  public static Picasso providePicasso(NetworkModule instance, Context context,
      OkHttp3Downloader okHttp3Downloader) {
    return Preconditions.checkNotNull(instance.providePicasso(context, okHttp3Downloader), "Cannot return null from a non-@Nullable @Provides method");
  }
}
