// Generated by Dagger (https://dagger.dev).
package com.example.moviedb_entri.di.Modules;

import com.example.moviedb_entri.ui.Adapter.HomeAdapter;
import com.squareup.picasso.Picasso;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class HomeModule_ProvideHomeAdapterFactory implements Factory<HomeAdapter> {
  private final HomeModule module;

  private final Provider<Picasso> picassoProvider;

  public HomeModule_ProvideHomeAdapterFactory(HomeModule module,
      Provider<Picasso> picassoProvider) {
    this.module = module;
    this.picassoProvider = picassoProvider;
  }

  @Override
  public HomeAdapter get() {
    return provideHomeAdapter(module, picassoProvider.get());
  }

  public static HomeModule_ProvideHomeAdapterFactory create(HomeModule module,
      Provider<Picasso> picassoProvider) {
    return new HomeModule_ProvideHomeAdapterFactory(module, picassoProvider);
  }

  public static HomeAdapter provideHomeAdapter(HomeModule instance, Picasso picasso) {
    return Preconditions.checkNotNull(instance.provideHomeAdapter(picasso), "Cannot return null from a non-@Nullable @Provides method");
  }
}
