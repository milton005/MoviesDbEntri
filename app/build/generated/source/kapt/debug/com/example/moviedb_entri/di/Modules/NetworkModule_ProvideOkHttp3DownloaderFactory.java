// Generated by Dagger (https://dagger.dev).
package com.example.moviedb_entri.di.Modules;

import com.squareup.picasso.OkHttp3Downloader;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;
import okhttp3.OkHttpClient;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class NetworkModule_ProvideOkHttp3DownloaderFactory implements Factory<OkHttp3Downloader> {
  private final NetworkModule module;

  private final Provider<OkHttpClient> okHttpClientProvider;

  public NetworkModule_ProvideOkHttp3DownloaderFactory(NetworkModule module,
      Provider<OkHttpClient> okHttpClientProvider) {
    this.module = module;
    this.okHttpClientProvider = okHttpClientProvider;
  }

  @Override
  public OkHttp3Downloader get() {
    return provideOkHttp3Downloader(module, okHttpClientProvider.get());
  }

  public static NetworkModule_ProvideOkHttp3DownloaderFactory create(NetworkModule module,
      Provider<OkHttpClient> okHttpClientProvider) {
    return new NetworkModule_ProvideOkHttp3DownloaderFactory(module, okHttpClientProvider);
  }

  public static OkHttp3Downloader provideOkHttp3Downloader(NetworkModule instance,
      OkHttpClient okHttpClient) {
    return Preconditions.checkNotNull(instance.provideOkHttp3Downloader(okHttpClient), "Cannot return null from a non-@Nullable @Provides method");
  }
}
